# Инструкция по установки и использовании программы Git.

Скачать программу по ссылке:
https://git-scm.com/book/ru/v2/Введение-Установка-Git

После установки прогаммы нужно вести следующие команды:


*git config --global user.name «Ваше имя англ буквами»*

*git config --global user.email ваша_почта@example.com*
 
 это нужно для того чтобы Git вас запомнил как пользователя



 ## Настройка програмы


Создаем папку для работы контроля версии

Вводим команду в терминале __*Git init*__
   для того, чтобы **Git** начал работать и создал репозиторий

В колонке проводник находим нашу созданную папку и в ней создаем файл с любым расширением





# Необходимые комманды для работы:
 
* git add - добовляем файлу версионнасть в локальном репозитории

    при вводе команды в конце добовлеям через пробел имя файла <insruction_git.vc>

* git status -  получить информацию от git о его текущем состоянии    

* git commit - фиксирует изменение и сообщает о появление новых версий файлов

    вводим команду git commit -m "Указываем соощение"

* git diff - показывает результат между текущим и уже зафиксированной версии файла

* git log - выводит список всех комитов в хронологическом порядке

* git checkout - позволяем перемещятся между сохраненными комитами

    при воде команды можно указать полное имя комита или превые 4 символа 
    
    **git checkout "0bc2"** или **git checkout "0bc2d11bf5d008c0c985aa1937727417982903fd"**

* git checkout master – вернуться к актуальному состоянию

* git branch "name_branch" - создать новую ветку

* git checkout "name_branch" - прейти на другую ветку

* git merge "name_branch" -  слияния веток

* git branch -d "name_branch" - удалить ветку

* git log -- graph - просмотреть все комиты веток

* git log --oneline -- graph - просмотреть все комиты веток в сокращеном виде

* git checkout -b "name_branch" - создать новую ветку и сразу на нее перейти

* git restore --staged <File> - отменить индексацию файла

* git commit -- amend - добавть к сохраненному комиту



# Форматирования текста

1. "#" Заголовок – выделение заголовков. Количество символов “#” задаёт уровень заголовка (поддерживается 6 уровней)
2.  = или - – подчёркиванием этими символами (не менее 3 подряд) выделяют заголовки первого 
(“=”) и второго (“-”) уровней. 
3. ** Полужирное начертание** или __ Полужирное начертание__
4. ,* Курсивное начертание* или _ Курсивное начертание_
5. ***Полужирное курсивное начертание ***
6. ~~ Зачёркнутый текст~~
7. ,  * Строка – ненумерованные списки, символ “*” в начале строки
8. 1, 2, 3 … – нумерованные списки




## Добавить изображение 

* Яблоко
![Яблоко](Apple.jpg)


* git log --oneline -- graph - просмотреть все комиты веток в сокращеном виде

* git checkout -b "name_branch" - создать новую ветку и сразу на нее перейти

* git restore --staged <File> - отменить индексацию файла

* git commit -- amend - добавть к сохраненному комиту